### This file was generated by Nexus Schema
### Do not make changes to this file directly


scalar DateTime

input FileCreateManyTaskInput {
  id: Int
  name: String!
  url: String!
}

input FileCreateManyTaskInputEnvelope {
  data: [FileCreateManyTaskInput!]
  skipDuplicates: Boolean
}

input FileCreateNestedManyWithoutTaskInput {
  connect: [FileWhereUniqueInput!]
  connectOrCreate: [FileCreateOrConnectWithoutTaskInput!]
  create: [FileCreateWithoutTaskInput!]
  createMany: FileCreateManyTaskInputEnvelope
}

input FileCreateOrConnectWithoutTaskInput {
  create: FileCreateWithoutTaskInput!
  where: FileWhereUniqueInput!
}

input FileCreateWithoutTaskInput {
  name: String!
  url: String!
}

input FileWhereUniqueInput {
  id: Int
}

type Mutation {
  createOneProject(data: ProjectCreateInput!): Project!
  createOneQuickTask(data: QuickTaskCreateInput!): QuickTask!
  createOneScheduledTask(data: ScheduledTaskCreateInput!): ScheduledTask!
  createOneTask(data: TaskCreateInput!): Task!
}

type Project {
  avatars: [String!]!
  className: String!
  id: Int!
  logo: String!
  name: String!
  tasks: [Task!]!
}

input ProjectCreateInput {
  avatars: ProjectCreateavatarsInput
  className: String!
  logo: String!
  name: String!
  tasks: TaskCreateNestedManyWithoutProjectInput
}

input ProjectCreateNestedOneWithoutTasksInput {
  connect: ProjectWhereUniqueInput
  connectOrCreate: ProjectCreateOrConnectWithoutTasksInput
  create: ProjectCreateWithoutTasksInput
}

input ProjectCreateOrConnectWithoutTasksInput {
  create: ProjectCreateWithoutTasksInput!
  where: ProjectWhereUniqueInput!
}

input ProjectCreateWithoutTasksInput {
  avatars: ProjectCreateavatarsInput
  className: String!
  logo: String!
  name: String!
}

input ProjectCreateavatarsInput {
  set: [String!]
}

input ProjectWhereUniqueInput {
  id: Int
  name: String
}

type Query {
  project(where: ProjectWhereUniqueInput!): Project
  projects(after: ProjectWhereUniqueInput, before: ProjectWhereUniqueInput, first: Int, last: Int): [Project!]!
  quickTask(where: QuickTaskWhereUniqueInput!): QuickTask
  quickTasks(after: QuickTaskWhereUniqueInput, before: QuickTaskWhereUniqueInput, first: Int, last: Int): [QuickTask!]!
  scheduledTask(where: ScheduledTaskWhereUniqueInput!): ScheduledTask
  scheduledTasks(after: ScheduledTaskWhereUniqueInput, before: ScheduledTaskWhereUniqueInput, first: Int, last: Int): [ScheduledTask!]!
  task(where: TaskWhereUniqueInput!): Task
  tasks(after: TaskWhereUniqueInput, before: TaskWhereUniqueInput, first: Int, last: Int): [Task!]!
}

type QuickTask {
  description: String
  done: Boolean
  id: Int
}

input QuickTaskCreateInput {
  description: String!
  done: Boolean
}

input QuickTaskWhereUniqueInput {
  id: Int
}

type ScheduledTask {
  datetime: String
  done: Boolean
  id: Int
  order: Int
  section: Int
  task: Task
  taskId: Int
}

input ScheduledTaskCreateInput {
  datetime: DateTime!
  done: Boolean
  order: Int!
  section: Int!
  task: TaskCreateNestedOneWithoutScheduledTaskInput!
}

input ScheduledTaskCreateManyTaskInput {
  datetime: DateTime!
  done: Boolean
  id: Int
  order: Int!
  section: Int!
}

input ScheduledTaskCreateManyTaskInputEnvelope {
  data: [ScheduledTaskCreateManyTaskInput!]
  skipDuplicates: Boolean
}

input ScheduledTaskCreateNestedManyWithoutTaskInput {
  connect: [ScheduledTaskWhereUniqueInput!]
  connectOrCreate: [ScheduledTaskCreateOrConnectWithoutTaskInput!]
  create: [ScheduledTaskCreateWithoutTaskInput!]
  createMany: ScheduledTaskCreateManyTaskInputEnvelope
}

input ScheduledTaskCreateOrConnectWithoutTaskInput {
  create: ScheduledTaskCreateWithoutTaskInput!
  where: ScheduledTaskWhereUniqueInput!
}

input ScheduledTaskCreateWithoutTaskInput {
  datetime: DateTime!
  done: Boolean
  order: Int!
  section: Int!
}

input ScheduledTaskWhereUniqueInput {
  id: Int
}

type Task {
  description: String
  id: Int
  project: Project
  projectId: Int
  title: String
}

input TaskCreateInput {
  ScheduledTask: ScheduledTaskCreateNestedManyWithoutTaskInput
  description: String!
  files: FileCreateNestedManyWithoutTaskInput
  project: ProjectCreateNestedOneWithoutTasksInput!
  title: String!
}

input TaskCreateManyProjectInput {
  description: String!
  id: Int
  title: String!
}

input TaskCreateManyProjectInputEnvelope {
  data: [TaskCreateManyProjectInput!]
  skipDuplicates: Boolean
}

input TaskCreateNestedManyWithoutProjectInput {
  connect: [TaskWhereUniqueInput!]
  connectOrCreate: [TaskCreateOrConnectWithoutProjectInput!]
  create: [TaskCreateWithoutProjectInput!]
  createMany: TaskCreateManyProjectInputEnvelope
}

input TaskCreateNestedOneWithoutScheduledTaskInput {
  connect: TaskWhereUniqueInput
  connectOrCreate: TaskCreateOrConnectWithoutScheduledTaskInput
  create: TaskCreateWithoutScheduledTaskInput
}

input TaskCreateOrConnectWithoutProjectInput {
  create: TaskCreateWithoutProjectInput!
  where: TaskWhereUniqueInput!
}

input TaskCreateOrConnectWithoutScheduledTaskInput {
  create: TaskCreateWithoutScheduledTaskInput!
  where: TaskWhereUniqueInput!
}

input TaskCreateWithoutProjectInput {
  ScheduledTask: ScheduledTaskCreateNestedManyWithoutTaskInput
  description: String!
  files: FileCreateNestedManyWithoutTaskInput
  title: String!
}

input TaskCreateWithoutScheduledTaskInput {
  description: String!
  files: FileCreateNestedManyWithoutTaskInput
  project: ProjectCreateNestedOneWithoutTasksInput!
  title: String!
}

input TaskWhereUniqueInput {
  id: Int
}
